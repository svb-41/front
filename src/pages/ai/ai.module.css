/* index.tsx */
.container {
  font-family: var(--monospace);
  flex: 1;
  padding: 24px;
  gap: 24px;
  display: flex;
  flex-direction: column;
  align-items: center;
}

.title {
  font-weight: 600;
  font-size: 2rem;
}

.fileName {
  display: flex;
  gap: 6px;
  padding: 12px;
  background: #ddd;
  align-items: center;
  border-bottom: 2px solid #ccc;
}

.logo {
  width: 20px;
  height: 20px;
}

.filePath {
  font-weight: 600;
  font-size: 1rem;
}

.filesCard {
  background: #eee;
  padding: 12px;
  /* border-radius: 10px; */
  gap: 12px;
  display: flex;
  flex-direction: column;
  width: 100%;
  max-width: 1500px;
}

.filesCardGrid {
  display: grid;
  gap: 12px;
  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
}

.fileCard {
  display: flex;
  flex-direction: column;
  border: 2px solid #ccc;
  /* border-radius: 10px; */
  overflow: hidden;
  height: 200px;
  cursor: pointer;
}

.modifs {
  display: flex;
  flex-direction: column;
  align-items: flex-end;
}

.modifsTitle {
  font-size: 0.7rem;
}

.fileBody {
  display: flex;
  flex-direction: column;
  background: #fff;
  padding: 12px;
  gap: 12px;
  flex-grow: 1;
}

.tags {
  display: flex;
  flex-wrap: wrap;
}

.tag {
  padding: 3px 6px;
  background: blue;
  color: white;
  font-weight: 700;
  /* border-radius: 6px; */
}

.fileDescription {
  flex-grow: 1;
}

/* editor.tsx */
.header {
  border-top: 2px solid #ddd;
  padding: 6px;
  background: #eee;
  display: flex;
  justify-content: space-between;
}

.indicators {
  display: flex;
  align-items: center;
  gap: 36px;
}

.monaco {
  flex: 1;
  display: grid;
  grid-template-areas: 'monaco';
}

.inputName {
  display: flex;
  align-items: center;
  font-family: var(--monospace);
}

.input {
  font-family: inherit;
  padding: 6px 0px;
  padding-right: 0;
  /* border-radius: 6px; */
  margin: 0;
  font-size: 1.3rem;
  outline: none;
  background: rgba(255, 255, 255, 0);
  transition: all 0.2s;
  border: 1px solid rgba(221, 221, 221, 0);
}

.inputName:hover .input {
  background: rgba(255, 255, 255, 1);
  padding: 6px 6px;
  border: 1px solid rgba(221, 221, 221, 1);
}

.inputExtension {
  font-family: var(--monospace);
  font-size: 1.3rem;
  padding: 6px 0px;
}

.inputName:hover .inputExtension {
  padding: 6px 4px;
}

.spacer {
  padding: 0px 3px;
}

.updatedAt {
  background: #ccc;
  padding: 3px 6px;
  /* border-radius: 6px; */
}

.compileButton {
  background: rgb(66, 119, 192);
  color: white;
  padding: 3px 6px;
  /* border-radius: 6px; */
}

.compileStatus {
  composes: inputName;
  gap: 6px;
}

.loader {
  width: 15px;
}

/* Checkbox */
.inputCheckbox {
  width: 1px;
  height: 1px;
  visibility: hidden;
  position: fixed;
  top: -10000vh;
  left: -10000vh;
}

.checkbox {
  width: 15px;
  height: 15px;
  border: 2px solid #222;
  cursor: pointer;
  color: white;
  display: flex;
  align-items: center;
  justify-content: center;
}

.uncheckedBox {
  composes: checkbox;
}

.checkedBox {
  composes: checkbox;
  background: #222;
}

.checkedMark {
  position: relative;
  top: -1px;
  left: 1px;
}
