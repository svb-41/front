"/*\n * ATTENTION: The \"eval\" devtool has been used (maybe by default in mode: \"development\").\n * This devtool is neither made for production nor for readable output files.\n * It uses \"eval()\" calls to create a separate source file in the browser devtools.\n * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)\n * or disable the default devtool with \"devtool: false\".\n * If you are looking for production-ready output files, see mode: \"production\" (https://webpack.js.org/configuration/mode/).\n */\n/******/ (() => { // webpackBootstrap\n/******/ \t\"use strict\";\n/******/ \tvar __webpack_modules__ = ({\n\n/***/ \"./src/starships-core.ts\":\n/*!*******************************!*\\\n  !*** ./src/starships-core.ts ***!\n  \\*******************************/\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\\n/* harmony export */   \\\"SHIP_CLASS\\\": () => (/* binding */ SHIP_CLASS),\\n/* harmony export */   \\\"position\\\": () => (/* binding */ position),\\n/* harmony export */   \\\"Channel\\\": () => (/* binding */ Channel),\\n/* harmony export */   \\\"Controller\\\": () => (/* binding */ Controller),\\n/* harmony export */   \\\"BulletController\\\": () => (/* binding */ BulletController),\\n/* harmony export */   \\\"INSTRUCTION\\\": () => (/* binding */ INSTRUCTION),\\n/* harmony export */   \\\"idle\\\": () => (/* binding */ idle),\\n/* harmony export */   \\\"turn\\\": () => (/* binding */ turn),\\n/* harmony export */   \\\"thrust\\\": () => (/* binding */ thrust),\\n/* harmony export */   \\\"fire\\\": () => (/* binding */ fire),\\n/* harmony export */   \\\"controlPanel\\\": () => (/* binding */ controlPanel),\\n/* harmony export */   \\\"bulletControlPanel\\\": () => (/* binding */ bulletControlPanel),\\n/* harmony export */   \\\"helpers\\\": () => (/* binding */ helpers)\\n/* harmony export */ });\\nvar SHIP_CLASS;\\n(function (SHIP_CLASS) {\\n    SHIP_CLASS[\\\"DESTROYER\\\"] = \\\"DESTROYER\\\";\\n    SHIP_CLASS[\\\"FIGHTER\\\"] = \\\"FIGHTER\\\";\\n    SHIP_CLASS[\\\"STEALTH\\\"] = \\\"STEALTH\\\";\\n    SHIP_CLASS[\\\"CRUISER\\\"] = \\\"CRUISER\\\";\\n    SHIP_CLASS[\\\"BOMBER\\\"] = \\\"BOMBER\\\";\\n    SHIP_CLASS[\\\"SCOUT\\\"] = \\\"SCOUT\\\";\\n    SHIP_CLASS[\\\"BASE\\\"] = \\\"BASE\\\";\\n})(SHIP_CLASS || (SHIP_CLASS = {}));\\nconst position = (position) => ({\\n    ...position,\\n    pos: {\\n        x: Math.cos(position.direction) * position.speed + position.pos.x,\\n        y: Math.sin(position.direction) * position.speed + position.pos.y,\\n    },\\n});\\nclass Channel {\\n    id;\\n    history = [];\\n    constructor(id) {\\n        this.id = id;\\n    }\\n    sendMessage(message) {\\n        this.history.push(message);\\n    }\\n    getNewMessages(time) {\\n        return this.history.filter(m => m.timeSend > time);\\n    }\\n}\\nclass Controller {\\n    data;\\n    shipId;\\n    getInstruction;\\n    constructor(shipId, getInstruction, initialData) {\\n        this.data = initialData;\\n        this.shipId = shipId;\\n        this.getInstruction = getInstruction;\\n    }\\n    next = (ship, comm, radar) => this.getInstruction({\\n        stats: ship,\\n        radar,\\n        comm,\\n        memory: this.data,\\n        ship: controlPanel(ship),\\n    });\\n}\\nclass BulletController {\\n    data;\\n    getInstruction;\\n    constructor(getInstruction, initialData) {\\n        this.data = initialData;\\n        this.getInstruction = getInstruction;\\n    }\\n    next = (bullet, radar) => this.getInstruction({\\n        stats: bullet,\\n        radar,\\n        memory: this.data,\\n        bullet: bulletControlPanel(bullet),\\n    });\\n}\\nvar INSTRUCTION;\\n(function (INSTRUCTION) {\\n    INSTRUCTION[\\\"DEFAULT\\\"] = \\\"DEFAULT\\\";\\n    INSTRUCTION[\\\"IDLE\\\"] = \\\"IDLE\\\";\\n    INSTRUCTION[\\\"TURN\\\"] = \\\"TURN\\\";\\n    INSTRUCTION[\\\"FIRE\\\"] = \\\"FIRE\\\";\\n    INSTRUCTION[\\\"THRUST\\\"] = \\\"THRUST\\\";\\n})(INSTRUCTION || (INSTRUCTION = {}));\\nconst idle = () => ({ id: INSTRUCTION.IDLE });\\nconst turn = (arg) => ({ id: INSTRUCTION.TURN, arg });\\nconst thrust = (arg) => ({ id: INSTRUCTION.THRUST, arg });\\nconst fire = (arg, conf) => ({ id: INSTRUCTION.FIRE, arg, conf });\\nconst controlPanel = (ship) => ({\\n    idle: () => idle(),\\n    turn: arg => turn(arg ? arg : ship.stats.turn),\\n    turnRight: arg => turn(arg ? -arg : -ship.stats.turn),\\n    turnLeft: arg => turn(arg ? arg : ship.stats.turn),\\n    fire: (arg, target) => fire(arg ? arg : 0, target),\\n    thrust: arg => thrust(arg ? arg : ship.stats.acceleration),\\n});\\nconst bulletControlPanel = (bullet) => ({\\n    idle: () => idle(),\\n    turn: arg => turn(arg ? arg : bullet.stats.turn),\\n    turnRight: arg => turn(arg ? -arg : -bullet.stats.turn),\\n    turnLeft: arg => turn(arg ? arg : bullet.stats.turn),\\n    thrust: arg => thrust(arg ? arg : bullet.stats.acceleration),\\n});\\n//HELPERS\\nconst PI = Math.PI;\\nconst TWO_PI = Math.PI * 2;\\nconst nextPosition = (num) => {\\n    return (pos) => {\\n        if (num > 0)\\n            return nextPosition(num - 1)(position(pos));\\n        return position(pos);\\n    };\\n};\\nconst angle = ({ source, target }) => {\\n    const angle = Math.atan2(target.pos.y - source.pos.y, target.pos.x - source.pos.x);\\n    return angle < 0 ? angle + TWO_PI : angle;\\n};\\nconst findDirection = ({ ship, source, target, delay = 1, }) => {\\n    const deltaAngle = (angle({\\n        source,\\n        target: nextPosition(delay)(target),\\n    }) -\\n        source.direction +\\n        TWO_PI) %\\n        TWO_PI;\\n    return ship.turn(-deltaAngle + Math.PI);\\n};\\nconst aim = ({ ship, source, target, delay = 1, threshold = 0.1, weapon = 0, }) => {\\n    const deltaAngle = (angle({\\n        source,\\n        target: nextPosition(delay)(target),\\n    }) -\\n        source.direction +\\n        TWO_PI) %\\n        TWO_PI;\\n    if (deltaAngle < threshold)\\n        return ship.fire(weapon);\\n    return ship.turn(-deltaAngle + PI);\\n};\\nconst dist2 = (pos1, pos2) => Math.pow(pos1.pos.x - pos2.pos.x, 2) + Math.pow(pos1.pos.y - pos2.pos.y, 2);\\nconst helpers = {\\n    dist2,\\n    PI,\\n    TWO_PI,\\n    nextPosition,\\n    angle,\\n    findDirection,\\n    aim,\\n};\\n\\n\\n//# sourceURL=webpack://starship-compiler/./src/starships-core.ts?\");\n\n/***/ }),\n\n/***/ \"../../../../../src/defaultId/ee1ddcc2-69e9-460e-8109-8916a8fe60ad-heavy.ts\":\n/*!**********************************************************************************!*\\\n  !*** ../../../../../src/defaultId/ee1ddcc2-69e9-460e-8109-8916a8fe60ad-heavy.ts ***!\n  \\**********************************************************************************/\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\\n/* harmony export */   \\\"default\\\": () => (__WEBPACK_DEFAULT_EXPORT__)\\n/* harmony export */ });\\n/* harmony import */ var _starships_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @starships/core */ \\\"./src/starships-core.ts\\\");\\n\\nconst heavy = (ship) => {\\n    const shipId = ship.id;\\n    const getInstruction = ({ stats, radar, memory, ship, comm, }) => {\\n        if (memory.targets === undefined)\\n            memory.targets = [];\\n        if (stats.position.speed < 0.1)\\n            return ship.thrust();\\n        const messages = comm.getNewMessages();\\n        const ally = radar.find((res) => res.team === stats.team &&\\n            Math.abs(_starships_core__WEBPACK_IMPORTED_MODULE_0__.helpers.angle({\\n                source: stats.position,\\n                target: _starships_core__WEBPACK_IMPORTED_MODULE_0__.helpers.nextPosition(200)(res.position),\\n            }) - stats.position.direction) < 0.1);\\n        const closeEnemy = radar\\n            .filter((res) => res.team !== stats.team && !res.destroyed)\\n            .map((res) => ({\\n            res,\\n            dist: _starships_core__WEBPACK_IMPORTED_MODULE_0__.helpers.dist2(res.position, stats.position),\\n        }));\\n        if (closeEnemy.length > 0) {\\n            const nearestEnemy = closeEnemy.reduce((acc, val) => acc.dist > val.dist ? val : acc);\\n            const resAim = _starships_core__WEBPACK_IMPORTED_MODULE_0__.helpers.aim({\\n                ship,\\n                source: stats.position,\\n                target: nearestEnemy.res.position,\\n                threshold: 1 / Math.sqrt(nearestEnemy.dist),\\n                delay: Math.sqrt(nearestEnemy.dist) / stats.weapons[0].bullet.position.speed,\\n            });\\n            if (resAim === ship.fire() && ally)\\n                return ship.idle();\\n            return resAim;\\n        }\\n        if (messages.length > 0) {\\n            const targets = messages\\n                .map(m => m.content.message.map((res) => res))\\n                .reduce((acc, val) => [...acc, ...val]);\\n            memory.targets = targets;\\n        }\\n        if (memory.targets.length > 0) {\\n            const target = _starships_core__WEBPACK_IMPORTED_MODULE_0__.helpers.nextPosition(50)(memory.targets.pop());\\n            const dist = _starships_core__WEBPACK_IMPORTED_MODULE_0__.helpers.dist2(target, stats.position);\\n            const threshold = 1 / Math.sqrt(dist);\\n            const resAim = _starships_core__WEBPACK_IMPORTED_MODULE_0__.helpers.aim({ ship, source: stats.position, target, threshold });\\n            if (resAim.id === ship.fire().id) {\\n                if (dist < Math.pow(stats.weapons[0].bullet.range, 2) || ally) {\\n                    return resAim;\\n                }\\n                return ship.idle();\\n            }\\n            else {\\n                return resAim;\\n            }\\n        }\\n        return ship.idle();\\n    };\\n    return new _starships_core__WEBPACK_IMPORTED_MODULE_0__.Controller(shipId, getInstruction, {});\\n};\\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (heavy);\\n\\n\\n//# sourceURL=webpack://starship-compiler/../../../../../src/defaultId/ee1ddcc2-69e9-460e-8109-8916a8fe60ad-heavy.ts?\");\n\n/***/ })\n\n/******/ \t});\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tvar cachedModule = __webpack_module_cache__[moduleId];\n/******/ \t\tif (cachedModule !== undefined) {\n/******/ \t\t\treturn cachedModule.exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/************************************************************************/\n/******/ \t/* webpack/runtime/define property getters */\n/******/ \t(() => {\n/******/ \t\t// define getter functions for harmony exports\n/******/ \t\t__webpack_require__.d = (exports, definition) => {\n/******/ \t\t\tfor(var key in definition) {\n/******/ \t\t\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n/******/ \t\t\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n/******/ \t\t\t\t}\n/******/ \t\t\t}\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/hasOwnProperty shorthand */\n/******/ \t(() => {\n/******/ \t\t__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/make namespace object */\n/******/ \t(() => {\n/******/ \t\t// define __esModule on exports\n/******/ \t\t__webpack_require__.r = (exports) => {\n/******/ \t\t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t\t}\n/******/ \t\t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/************************************************************************/\n/******/ \t\n/******/ \t// startup\n/******/ \t// Load entry module and return exports\n/******/ \t// This entry module can't be inlined because the eval devtool is used.\n/******/ \tvar __webpack_exports__ = __webpack_require__(\"../../../../../src/defaultId/ee1ddcc2-69e9-460e-8109-8916a8fe60ad-heavy.ts\");\n/******/ \tvar __webpack_export_target__ = this;\n/******/ \tfor(var i in __webpack_exports__) __webpack_export_target__[i] = __webpack_exports__[i];\n/******/ \tif(__webpack_exports__.__esModule) Object.defineProperty(__webpack_export_target__, \"__esModule\", { value: true });\n/******/ \t\n/******/ })()\n;"
